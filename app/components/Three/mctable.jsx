/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 .\public\3Dmods\enchanting_table.glb 
Author: Brendan George (https://sketchfab.com/Brendan.George)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/enchanting-table-1b1acafa3d864cf29e59332e424815b2
Title: Enchanting Table
*/

import React, { useRef, useEffect } from "react";
import { useLoader, useFrame } from "@react-three/fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { AnimationMixer } from "three";

export const Model = (props) => {
  const gltf = useLoader(GLTFLoader, "3Dmods/enchanting_table.glb");
  const modelRef = useRef();
  const mixerRef = useRef();
  const actionRef = useRef();

  useEffect(() => {
    if (gltf.animations.length > 0) {
      mixerRef.current = new AnimationMixer(gltf.scene);
      actionRef.current = mixerRef.current.clipAction(gltf.animations[0]);
    }
  }, [gltf]);

  useEffect(() => {
    if (actionRef.current) {
      if (props.open) {
        actionRef.current.play();
      } else {
        actionRef.current.stop();
      }
    }
  }, [props.open]);


  useFrame((state, delta) => {
    mixerRef.current?.update(delta);
  });

  const handleClick = () => {
    props.setOpen(!props.open);
  };

  return <primitive ref={modelRef} object={gltf.scene} onClick={handleClick} />;
};
